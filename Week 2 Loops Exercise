// Week 2 - Loops

// In the following exercises, you will need to place your code or answer underneath each
// exercise prompt.

// First try answering these without using references or looking up any information.
// Then, check your answer by using references and/or running your code.
// You can run your JS code using the Chrome or Firefox Developer tools, or by using Node.js.
// Feel free to update your answers if you got them wrong at first -- this exercise is for your own learning.
// But make sure you understand why the correct answer is right.

// Exercise 1. Write a 'while' loop that prints the integers (whole numbers)
// between 1 and 5 (inclusive).

let a = 1
while (a <= 5) {
 console.log(a);
 a++;
};

// Exercise 2. Write a 'do while' loop that prints the integers (whole numbers)
// between 1 and 5 (inclusive).

let b = 0;
do {
 b = b + 1;
 console.log(b);
 } 
while (b < 5);

// Exercise 3. Write a 'for' loop that prints the integers (whole numbers)
// between 1 and 5 (inclusive).

for (let x = 1; x <= 5; x++) {
  console.log(x);
};

// Exercise 4. Now we want a loop that prints the integers
// counting DOWN from 10 to 1 (inclusive). Write three loops that do this, to practice
// writing loops in all 3 ways -- as a 'while', 'do while', and 'for' loop.

let c = 10;
while (c >= 1) {
console.log(c);
c--;
};

let d = 11;
do {
 d = d - 1;
 console.log(d);
 } 
while (d > 1);

for (let e = 10; e >= 1; e--) {
  console.log(e);
};

// Exercise 5. Write a loop that prints the integers from 7 to 27. Write this
// loop in all 3 ways -- as a 'while', 'do while', and 'for' loop.

let f = 7
while (f < 28) {
 console.log(f);
 f++;
 };
 
 let g = 6;
 do {
   g++;
   console.log(g);
   }
  while (g < 27);
   
  for (let h = 7; h < 28; h++) {
     console.log(h);
   }; 
   
   

// Exercise 6. Write a loop that prints numbers between 0 and 100, counting by tens.
// I.e. it will print 10, then 20, then 30, etc.
// Write this loop in all 3 ways -- as a 'while', 'do while', and 'for' loop.

let i = 10;
while (i < 100) {
 console.log(i);
 i += 10;
};

let j = 0;
do {
 j += 10;
 console.log(j);
 }
 while (j < 100);

for (let k = 10; k <= 100; k = k + 10) {
     console.log(k);
   };

// Exercise 7. Add a comment as to why the following loop is an infinite loop (will
// run without ever stopping). Then fix the loop so that it stops when
// counterFour is equal to -100.

// The loop is infinite because the condition will never be met. -100 can never be reached since 1 is already less than 2 and the console will keep printing the string
//instead of the variable that is actually running in the loop. In a way it has broken the chain because it is calling something that isn't really apart of it.

//let counterFour = 1;
//while (counterFour < 2) {
//  console.log("HELP ME!");
//  counterFour--;
//}

let counterFour = 1;
while (counterFour > -101) {
  console.log(counterFour);
  counterFour--;
};

// Exercise 8. Make a variable that contains your favorite integer. Write a loop
// (your choice which type) that prints the integers from 0 to that number.

let myFavNumber = 27;
for (let l = 0; l <= 27; l++) {
  console.log(l);
};  

// Exercise 9. Make a variable that contains your favorite integer (this time make sure it's
// less than 100). Write a loop (your choice which type) that prints the integers from 0 to 100.
// Next to each number it should print "not my favorite number". But next to your favorite
// number it should print "my favorite number!". Example output (if your favorite number was 2):
// 0 not my favorite number
// 1 not my favorite number
// 2 my favorite number!
// 3 not my favorite number
// ...
// (Hint - use an if statement in your loop)

let myFaveNumber = 27;
for (let m = 0; m <= 100; m++) {
  if (m === 27) {
    console.log(m + " my favorite number!")
  } else { 
    console.log(m + " not my favorite number")
  }
};
 

// Exercise 10. In some of the exercises above, we had you write all 3 types of loops, for practice.
// But in real life, how would you decide which type of loop to use? You might not have an
// exact answer, but spend a few minutes thinking about the different types of loops and/or
// doing some research and write down your thoughts in a comment below:

//From my research, you use a For Loop when you know the number of times you want to execute
//the loop. But a Do While loop or even a While Loop would be used when you need user input. I tend to
//lean towards a For Loop personally because I think the set up is very straight forward and it's a little
//harder to break.

// Exercise 11. Now we'll practice using nested loops (a loop inside another loop)!
// Update the nested loops below to so that for each value of outsideCounter,
// the inside loop will show a countdown

/*
counting down from 0
*********************************** 
counting down from 1
inside 1
*********************************** 
counting down from 2
inside 2
inside 1
*********************************** 
counting down from 3
inside 3
inside 2
inside 1
*********************************** 
*/

for (let outsideCounter = 0; outsideCounter <= 3; outsideCounter++) {
  console.log("counting down from", outsideCounter);
  for (let insideCounter = outsideCounter; insideCounter >= 1; insideCounter--) {
    console.log("inside ", insideCounter);
  }
  console.log("***********************************");
};

// Congrats, you made it to the end!
// Did you find this easy or hard? If you used references, which ones helped you?
// Please answer in a comment below.
// This one was easier than I expected. Ran into a couple roadblocks but was able to utilize my notes and freeCodeCamp to work them out.

// Email your file to us or commit your file to GitHub and email us a link.
